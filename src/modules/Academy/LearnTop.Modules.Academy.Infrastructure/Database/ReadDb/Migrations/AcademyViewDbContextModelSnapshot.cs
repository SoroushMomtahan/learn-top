// <auto-generated />
using System;
using LearnTop.Modules.Academy.Infrastructure.Database.ReadDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LearnTop.Modules.Academy.Infrastructure.Database.ReadDb.Migrations
{
    [DbContext(typeof(AcademyViewDbContext))]
    partial class AcademyViewDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LearnTop.Modules.Academy.Domain.Tickets.ViewModels.ReplyTicketView", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TicketViewId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TicketViewId");

                    b.ToTable("ReplyTicketView");
                });

            modelBuilder.Entity("LearnTop.Modules.Academy.Domain.Tickets.ViewModels.TicketView", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TicketViews");
                });

            modelBuilder.Entity("LearnTop.Modules.Academy.Domain.Tickets.ViewModels.ReplyTicketView", b =>
                {
                    b.HasOne("LearnTop.Modules.Academy.Domain.Tickets.ViewModels.TicketView", null)
                        .WithMany("ReplyTicketView")
                        .HasForeignKey("TicketViewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LearnTop.Modules.Academy.Domain.Tickets.ViewModels.TicketView", b =>
                {
                    b.Navigation("ReplyTicketView");
                });
#pragma warning restore 612, 618
        }
    }
}
